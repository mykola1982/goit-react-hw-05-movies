{"version":3,"file":"static/js/649.acf0aa97.chunk.js","mappings":"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","sources":["api/tmdbAPI.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","utils/normalizDetails.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","utils/getGenres.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '941391c38298a3626ffc21c5189f1c8b';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const url = `trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const url = `movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchCreditsMovies = async id => {\n  const url = `movie/${id}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const url = `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(url);\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const BackdropLoader = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 102, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  transition: opacity 250ms linear, visibility 250ms linear;\n`;\n\nexport const StyledLoader = styled.div`\n  margin: 0 auto;\n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  translate: -50% -50%;\n`;\n","import { Watch } from 'react-loader-spinner';\nimport { BackdropLoader, StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <BackdropLoader>\n      <StyledLoader>\n        <Watch\n          height=\"200\"\n          width=\"200\"\n          radius=\"48\"\n          color=\"#FF6600\"\n          ariaLabel=\"watch-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      </StyledLoader>\n    </BackdropLoader>\n  );\n};\n","export const normalizDetails = movie => {\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    movie;\n  return { poster_path, title, release_date, overview, genres, vote_average };\n};\n","import styled from '@emotion/styled';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n  border-bottom: 2px solid black;\n  padding: 20px 0;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n  height: 380px;\n`;\n\nexport const WrapDetails = styled.div`\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const AddInformation = styled.section`\n  border-bottom: 2px solid black;\n  padding: 20px 0;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n`;\n\nexport const Item = styled.li`\n  margin-left: 25px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  width: 100px;\n  height: 10px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: 1px solid orange;\n  color: black;\n  font-weight: 500;\n  transition: color 250ms linear, background-color 250ms linear;\n\n  &.active {\n    background-color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orange;\n  }\n`;\n\nexport const StyledLinkBack = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orange;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FiChevronLeft } from 'react-icons/fi';\n\nimport * as API from '../../api/tmdbAPI';\nimport { IMAGE_URL } from 'api/tmdbAPI';\nimport { normalizDetails } from 'utils/normalizDetails';\nimport { getGenres } from 'utils/getGenres';\nimport { Loader } from 'components/Loader';\n\nimport {\n  Section,\n  Img,\n  WrapDetails,\n  Title,\n  Text,\n  AddInformation,\n  StyledLink,\n  List,\n  Item,\n  StyledLinkBack,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [detailsMovie, setDetailsMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getDetailsMovie() {\n      try {\n        setIsLoading(true);\n\n        const movie = await API.fetchDetailsMovie(movieId);\n\n        setDetailsMovie(normalizDetails(movie));\n      } catch (error) {\n        setError({ error });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getDetailsMovie();\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <Loader />}\n\n      {detailsMovie && (\n        <>\n          <StyledLinkBack to={backLinkHref}>\n            <FiChevronLeft size=\"24\" />\n            Go back\n          </StyledLinkBack>\n          <Section>\n            <Img\n              src={\n                detailsMovie.poster_path\n                  ? IMAGE_URL + detailsMovie.poster_path\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={detailsMovie.title}\n              width=\"250\"\n            />\n            <WrapDetails>\n              <Title>\n                {detailsMovie.title}(\n                {new Date(detailsMovie.release_date).getFullYear()})\n              </Title>\n\n              <Text>\n                <b>User Score: </b>\n                {detailsMovie.vote_average.toFixed(1)}\n              </Text>\n              <Text>\n                <b>Overview: </b>\n                {detailsMovie.overview}\n              </Text>\n              <Text>\n                <b> Ganres: </b>\n                {getGenres(detailsMovie.genres)}\n              </Text>\n            </WrapDetails>\n          </Section>\n          <AddInformation>\n            <Title>Additional information</Title>\n            <List>\n              <Item>\n                <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n                  Reviews\n                </StyledLink>\n              </Item>\n              <Item>\n                <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n                  Cast\n                </StyledLink>\n              </Item>\n            </List>\n          </AddInformation>\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export const getGenres = genres => {\n  return genres.map(genre => genre.name).join(', ');\n};\n"],"names":["axios","API_KEY","IMAGE_URL","fetchTrendingMovies","url","data","fetchSearchMovies","query","fetchDetailsMovie","id","fetchCreditsMovies","fetchReviewsMovie","BackdropLoader","styled","StyledLoader","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","normalizDetails","movie","poster_path","title","release_date","overview","genres","vote_average","Section","Img","WrapDetails","Title","Text","AddInformation","List","Item","StyledLink","NavLink","StyledLinkBack","Link","location","useLocation","movieId","useParams","useState","detailsMovie","setDetailsMovie","isLoading","setIsLoading","error","setError","useEffect","API","getDetailsMovie","backLinkHref","state","from","message","to","size","src","alt","Date","getFullYear","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}