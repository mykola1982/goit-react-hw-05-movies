{"version":3,"file":"static/js/458.4eb46db5.chunk.js","mappings":"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","sources":["api/tmdbAPI.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","utils/moviesMaper.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '941391c38298a3626ffc21c5189f1c8b';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const url = `trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const url = `movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchCreditsMovies = async id => {\n  const url = `movie/${id}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const url = `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(url);\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const BackdropLoader = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 102, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  transition: opacity 250ms linear, visibility 250ms linear;\n`;\n\nexport const StyledLoader = styled.div`\n  margin: 0 auto;\n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  translate: -50% -50%;\n`;\n","import { Watch } from 'react-loader-spinner';\nimport { BackdropLoader, StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <BackdropLoader>\n      <StyledLoader>\n        <Watch\n          height=\"200\"\n          width=\"200\"\n          radius=\"48\"\n          color=\"#FF6600\"\n          ariaLabel=\"watch-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      </StyledLoader>\n    </BackdropLoader>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  position: relative;\n\n  width: calc((100% - 48px) / 4);\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  height: 460px;\n  transition: scale 250ms linear;\n\n  &:hover,\n  :focus {\n    scale: 1.05;\n  }\n`;\n\nexport const Raiting = styled.p`\n  width: 50px;\n  height: 30px;\n  color: #fff;\n  text-align: center;\n  text-transform: uppercase;\n  background: orange;\n  border-radius: 5px;\n  padding: 1px 6px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  display: block;\n  position: absolute;\n  top: 15px;\n  right: 15px;\n`;\n\nexport const Img = styled.img`\n  height: 83%;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 4px;\n`;\n\nexport const Title = styled.p`\n  margin-top: 8px;\n  padding-left: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.2;\n  color: #000;\n  text-transform: uppercase;\n`;\n\nexport const Release = styled.p`\n  margin-top: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.2;\n  color: orange;\n  padding-left: 8px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { IMAGE_URL } from 'api/tmdbAPI';\nimport { Link } from 'react-router-dom';\n\nimport { Item, Raiting, Title, Release, Img } from './MovieItem.styled';\n\nexport const MovieItem = ({ movie, location }) => {\n  const { id, vote_average, poster_path, title, release_date } = movie;\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Raiting> {vote_average.toFixed(1)}</Raiting>\n        <Img\n          src={\n            poster_path\n              ? IMAGE_URL + poster_path\n              : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n          }\n          alt={title}\n        />\n        <Title> {title} </Title>\n        <Release> {new Date(release_date).getFullYear()} </Release>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }).isRequired,\n  location: PropTypes.object,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding: 30px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MovieItem';\n\nimport { List } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} location={location} />\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ).isRequired,\n  location: PropTypes.object,\n};\n","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const StyledForm = styled(Form)`\n  padding: 20px;\n  display: flex;\n  height: 35px;\n\n  width: 300px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n  padding-left: 35px;\n  margin-right: 24px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n  height: 40px;\n\n  border-radius: 4px;\n  color: black;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  :focus {\n    background-color: orange;\n    border: 2px solid black;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  width: 24px;\n  height: 26px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Formik } from 'formik';\n\nimport { StyledForm, Input, Button, Icon } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit, velue }) => {\n  const handleSubmit = ({ query }) => {\n    onSubmit(query);\n  };\n  return (\n    <>\n      <Formik initialValues={{ query: velue }} onSubmit={handleSubmit}>\n        <StyledForm>\n          <Input\n            name=\"query\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <Button type=\"submit\">\n            <Icon />\n            <p>Search</p>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  velue: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { SearchBox } from 'components/SearchBox';\nimport { MoviesList } from 'components/MoviesList';\nimport { moviesMaper } from 'utils/moviesMaper';\n\nimport { Loader } from '../../components/Loader/Loader';\nimport * as API from '../../api/tmdbAPI';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    async function getSearchMovies() {\n      try {\n        setIsLoading(true);\n        const { results } = await API.fetchSearchMovies(searchQuery);\n        const movies = moviesMaper(results);\n        setSearchMovies(movies);\n\n        if (movies.length === 0) {\n          toast(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n      } catch (error) {\n        setError({ error });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getSearchMovies();\n  }, [searchQuery]);\n\n  const handelSubmitForm = velue => {\n    setSearchParams(velue !== '' ? { query: velue.toLowerCase() } : {});\n    if (velue === '') {\n      toast('Please enter data to search.');\n    }\n  };\n\n  return (\n    <main>\n      <SearchBox onSubmit={handelSubmitForm} velue={searchQuery} />\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <Loader />}\n      {searchMovies?.length > 0 && (\n        <MoviesList movies={searchMovies} location={location} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, vote_average, poster_path, title, release_date }) => ({\n      id,\n      vote_average,\n      poster_path,\n      title,\n      release_date,\n    })\n  );\n};\n"],"names":["axios","API_KEY","IMAGE_URL","fetchTrendingMovies","url","data","fetchSearchMovies","query","fetchDetailsMovie","id","fetchCreditsMovies","fetchReviewsMovie","BackdropLoader","styled","StyledLoader","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Item","Raiting","Img","Title","Release","MovieItem","movie","location","vote_average","poster_path","title","release_date","to","state","from","toFixed","src","alt","Date","getFullYear","List","MoviesList","movies","map","StyledForm","Form","Input","Field","Button","Icon","FcSearch","SearchBox","onSubmit","velue","initialValues","name","type","autoComplete","autoFocus","placeholder","useLocation","useState","searchMovies","setSearchMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","API","results","moviesMaper","length","toast","getSearchMovies","toLowerCase","message"],"sourceRoot":""}