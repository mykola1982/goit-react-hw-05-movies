{"version":3,"file":"static/js/669.3a3afd7e.chunk.js","mappings":"2UAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCACHC,EAAY,kCAEZC,EAAmB,mCAAG,+FAC3BC,EAD2B,qCACSH,GADT,SAEVD,EAAAA,EAAAA,IAAUI,GAFA,uBAEzBC,EAFyB,EAEzBA,KAFyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBH,EADyB,+BACKH,EADL,iCACqCM,EADrC,wCAERP,EAAAA,EAAAA,IAAUI,GAFF,uBAEvBC,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,sDAMjBG,EAAiB,mCAAG,WAAMC,GAAN,kFACzBL,EADyB,gBACVK,EADU,oBACIR,GADJ,SAERD,EAAAA,EAAAA,IAAUI,GAFF,uBAEvBC,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,sDAMjBK,EAAkB,mCAAG,WAAMD,GAAN,kFAC1BL,EAD0B,gBACXK,EADW,4BACWR,GADX,SAETD,EAAAA,EAAAA,IAAUI,GAFD,uBAExBC,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,2CAAH,sDAMlBM,EAAiB,mCAAG,WAAMF,GAAN,kFACzBL,EADyB,gBACVK,EADU,4BACYR,EADZ,mCAERD,EAAAA,EAAAA,IAAUI,GAFF,uBAEvBC,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,qD,4FC5BjBO,EAAiBC,EAAAA,EAAAA,IAAH,iNAUdC,EAAeD,EAAAA,EAAAA,IAAH,gJ,SCTZE,EAAS,WACpB,OACE,SAACH,EAAD,WACE,SAACE,EAAD,WACE,SAAC,KAAD,CACEE,OAAO,MACPC,MAAM,MACNC,OAAO,KACPC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,OAKlB,C,yNCpBYC,EAAe,SAAAC,GAC1B,OAAOA,EAAQC,KAAI,kBAA8B,CAAEjB,GAAhC,EAAGA,GAAiCkB,OAApC,EAAOA,OAAqCC,QAA5C,EAAeA,QAAf,GACpB,E,6BCAYC,EAAUhB,EAAAA,EAAAA,QAAH,4CAIPiB,EAAOjB,EAAAA,EAAAA,GAAH,gDAIJkB,EAAOlB,EAAAA,EAAAA,EAAH,6C,SC8CjB,EA/CgB,WACd,IAAQmB,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,SAG0BE,EAAAA,GAAsBT,GAHhD,OAGUP,EAHV,OAIIU,EAAWX,EAAaC,EAAQiB,UAJpC,gDAMIL,EAAS,CAAED,MAAK,OANpB,yBAQIG,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAad5B,EACD,GAAE,CAACqB,KAGF,gCACGI,IAAS,0DAAkCA,EAAMO,WACjDL,IAAa,SAACvB,EAAA,EAAD,IACbU,EAAQmB,OAAS,GAChB,SAACf,EAAD,WACE,wBACGJ,EAAQC,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACE,EAAD,YACE,2BACE,oCADF,IACmBH,MAEnB,SAACI,EAAD,UAAOH,MAJEnB,EADA,SAWjB,SAACsB,EAAD,kDAIP,C","sources":["api/tmdbAPI.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","utils/reviewsMaper.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '941391c38298a3626ffc21c5189f1c8b';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const url = `trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const url = `movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchCreditsMovies = async id => {\n  const url = `movie/${id}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const url = `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(url);\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const BackdropLoader = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 102, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  transition: opacity 250ms linear, visibility 250ms linear;\n`;\n\nexport const StyledLoader = styled.div`\n  margin: 0 auto;\n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  translate: -50% -50%;\n`;\n","import { Watch } from 'react-loader-spinner';\nimport { BackdropLoader, StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <BackdropLoader>\n      <StyledLoader>\n        <Watch\n          height=\"200\"\n          width=\"200\"\n          radius=\"48\"\n          color=\"#FF6600\"\n          ariaLabel=\"watch-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      </StyledLoader>\n    </BackdropLoader>\n  );\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as API from '../../api/tmdbAPI';\nimport { reviewsMaper } from 'utils/reviewsMaper';\nimport { Loader } from 'components/Loader';\n\nimport { Section, Item, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchReviewsMovie() {\n      try {\n        setIsLoading(true);\n        const reviews = await API.fetchReviewsMovie(movieId);\n        setReviews(reviewsMaper(reviews.results));\n      } catch (error) {\n        setError({ error });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchReviewsMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        <Section>\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <Item key={id}>\n                <h3>\n                  <b>Author: </b> {author}\n                </h3>\n                <Text>{content}</Text>\n              </Item>\n            ))}\n          </ul>\n        </Section>\n      ) : (\n        <Text>No comments have been left yet...</Text>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","IMAGE_URL","fetchTrendingMovies","url","data","fetchSearchMovies","query","fetchDetailsMovie","id","fetchCreditsMovies","fetchReviewsMovie","BackdropLoader","styled","StyledLoader","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","reviewsMaper","reviews","map","author","content","Section","Item","Text","movieId","useParams","useState","setReviews","error","setError","isLoading","setIsLoading","useEffect","API","results","message","length"],"sourceRoot":""}